/* Tagged Entity specific markups */

.taggedentity,
.xmltag{
    position: relative;
    display: inline;
    z-index: 1;
}

.taggedentity > *{
    z-index: 1;
}

.tagname-markup, .contents{
    display: inline-block;
}

.linked > .tagname-markup{
    color: green;
}

.unlinked > .tagname-markup{
    color: orangered;
}

.taggedentity.selected .tagname-markup, .taggedentity:hover .tagname-markup{
    display: inline-block;
}

.tagname-markup{
    position: absolute;
    display: inline-block;
    color: red;
    top: 8px;
    left: 1px;
    font-size: 10px;
    font-variant: small-caps;
}

@mixin tag-toggle-on($tag, $colorNormal){
    #{".taggedentity[xmltagname='" + $tag + "']"}{    
        background: linear-gradient(rgba(0, 0, 0, 0.0),  $colorNormal);
    }

    #{".taggedentity.selected[xmltagname='" + $tag + "']"},
    #{".taggedentity[xmltagname='" + $tag + "']:hover"},
    #{".taggedentity[xmltagname='" + $tag + "'] + .contents:hover"}{
        cursor: pointer;
        background: linear-gradient($colorNormal, rgba(255, 255, 0, 0.75));
    }
}

@mixin tag-toggle-off($tag){
    #{".taggedentity[xmltagname='" + $tag + "'] .tagname-markup"}{
        display: none;
    }
}

#entityPanel:not([data-hide-location='true']){
    @include tag-toggle-on(LOCATION, rgba(200, 200, 255, 0.75));
}

#entityPanel:not([data-hide-person='true']){
    @include tag-toggle-on(PERSON, rgba(200, 255, 200, 0.9));
}

#entityPanel:not([data-hide-organization='true']){
    @include tag-toggle-on(ORGANIZATION, rgba(200, 200, 255, 0.75));
}

#entityPanel:not([data-hide-title='true']){
    @include tag-toggle-on(TITLE, rgba(200, 200, 255, 0.75));
}

#entityPanel[data-hide-location='true']{
    @include tag-toggle-off(LOCATION);
}

#entityPanel[data-hide-person='true']{
    @include tag-toggle-off(PERSON);
}

#entityPanel[data-hide-organization='true']{
    @include tag-toggle-off(ORGANIZATION);
}

#entityPanel[data-hide-title='true']{
    @include tag-toggle-off(TITLE);
}